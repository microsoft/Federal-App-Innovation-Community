{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualNetworkIPRange": {
            "defaultValue": "192.168.0.0/16",
            "type": "String",
            "allowedValues": [
                "192.168.0.0/16",
                "10.0.0.0/16",
                "10.10.0.0/16",
                "10.100.0.0/16"
            ],
            "metadata": {
                "description": "This is the IP Range for the VNET in which the Azure Firewall will reside."
            }
        },
        "webAppName": {
            "type": "string",
            "defaultValue": "webAppExample",
            "metadata": {
                "description": "Name of the Web App Service farm"
            }
        }
    },
    "variables": {
        "webAppDnsName": ".azurewebsites",
        "networkLocation": "[resourceGroup().location]",
        "webAppDnsExtension" : "[if(contains(variables('networkLocation'), 'usgov'), '.us', '.net')]",
        "skuTier": "PremiumV2",
        "webAppUniqueName": "[format('{0}-{1}', parameters('webAppName'), uniqueString(resourceGroup().id))]",
        "privateDnsZoneName": "[concat(variables('webAppUniqueName'),'.privatelink.azurewebsites.net')]",
        "virtualNetworkName": "[concat('VNET-', variables('webAppUniqueName'))]",
        "IPBase": "[split(parameters('virtualNetworkIPRange'),'.')]",
        "subnetFirewallName": "AzureFirewallSubnet",
        "subnetFirewallIPRange": "[format('{0}.{1}.{2}.{3}/{4}', variables('IPBase')[0], variables('IPBase')[1], '0', '0', '26')]",
        "subnetInternalName": "InternalSubnet",
        "subnetInternalIPRange": "[format('{0}.{1}.{2}.{3}/{4}', variables('IPBase')[0], variables('IPBase')[1], '10', '0', '26')]",
        "azureFirewallName": "[concat('AzFW-', variables('webAppUniqueName'))]",
        "azureFirewallPoliciesName": "[concat('AzFwPlc-', variables('webAppUniqueName'))]",
        "azureFirewallPolicyCollectionName": "DNAT Rule Collection",
        "azureFirewallPolicyRuleName": "[concat(variables('webAppUniqueName'),'-Inbound-NAT')]",
        "azureFirewallPolicyRuleDestinationPort": "5443",
        "publicIPAzureFirewallName": "[concat('PIP-AzFw-', variables('webAppUniqueName'))]",
        "logAnalyticsWorkspaceName": "[concat('LAW-', variables('webAppUniqueName'))]",
        "eventHubNamespaceName": "[concat('EvHbNmSpc-', variables('webAppUniqueName'))]",
        "eventHubName": "[concat('EvHb-', variables('webAppUniqueName'))]",
        "webAppServiceName": "[concat('AppService-', variables('webAppUniqueName'))]",
        "webAppInternalName": "[concat(variables('webAppUniqueName'),'-Internal')]",
        "webAppSkuName": "P1v2",
        "webAppInternalPrivateEndpointName": "[concat('Priv-', variables('webAppUniqueName'))]",
        "privateLinkConnectionName": "[concat('PrivLink-', variables('webAppUniqueName'))]",
        "diagSettingsName": "[concat('SendtoWorkspace-', variables('webAppUniqueName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "name": "[variables('virtualNetworkName')]",
            "location": "[variables('networkLocation')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('virtualNetworkIPRange')]"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(variables('virtualNetworkName'), '/', variables('subnetInternalName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "addressPrefix": "[variables('subnetInternalIPRange')]",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(variables('virtualNetworkName'), '/', variables('subnetFirewallName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetInternalName'))]"
            ],
            "properties": {
                "addressPrefix": "[variables('subnetFirewallIPRange')]",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "name": "[variables('publicIPAzureFirewallName')]",
            "location": "[variables('networkLocation')]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-06-01",
            "name": "[variables('webAppInternalPrivateEndpointName')]",
            "location": "[variables('networkLocation')]",
            "properties": {
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetInternalName'))]"
                },
                "privateLinkServiceConnections": [
                    {
                        "name": "[variables('privateLinkConnectionName')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Web/sites', variables('webAppInternalName'))]",
                            "groupIds": [
                                "sites"
                            ]
                        }
                    }
                ],
                "customDnsConfigs": [
                    {
                        "fqdn": "[concat(variables('webAppInternalName'), variables('webAppDnsName'), variables('webAppDnsExtension'))]",
                        "ipAddresses": [
                            "[format('{0}.{1}.{2}.{3}', variables('IPBase')[0], variables('IPBase')[1], '10', '4')]"
                        ]
                    },
                    {
                        "fqdn": "[concat(variables('webAppInternalName'),'.scm', variables('webAppDnsName'), variables('webAppDnsExtension'))]",
                        "ipAddresses": [
                            "[format('{0}.{1}.{2}.{3}', variables('IPBase')[0], variables('IPBase')[1], '10', '4')]"
                        ]
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetInternalName'))]",
                "[resourceId('Microsoft.Web/sites', variables('webAppInternalName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[variables('privateDnsZoneName')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[format('{0}/{1}', variables('privateDnsZoneName'), format('{0}-link', variables('privateDnsZoneName')))]",
            "location": "global",
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-03-01",
            "name": "[format('{0}/{1}', variables('webAppInternalPrivateEndpointName'), 'dnsgroupname')]",
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "config1",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]"
                        }
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]",
                "[resourceId('Microsoft.Network/privateEndpoints', variables('webAppInternalPrivateEndpointName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/firewallPolicies",
            "apiVersion": "2020-11-01",
            "name": "[variables('azureFirewallPoliciesName')]",
            "location": "[variables('networkLocation')]",
            "properties": {
                "sku": {
                    "tier": "Premium"
                },
                "threatIntelMode": "Alert",
                "intrusionDetection": {
                    "mode": "Alert"
                }
            }
        },
        {
            "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
            "apiVersion": "2020-11-01",
            "name": "[concat(variables('azureFirewallPoliciesName'), '/DefaultNetworkRuleCollectionGroup')]",
            "location": "[variables('networkLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/firewallPolicies', variables('azureFirewallPoliciesName'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAzureFirewallName'))]"
            ],
            "properties": {
                "priority": 100,
                "ruleCollections": [
                    {
                        "ruleCollectionType": "FirewallPolicyNatRuleCollection",
                        "action": {
                            "type": "Dnat"
                        },
                        "rules": [
                            {
                                "ruleType": "NatRule",
                                "name": "[variables('azureFirewallPolicyRuleName')]",
                                "translatedAddress": "[format('{0}.{1}.{2}.{3}', variables('IPBase')[0], variables('IPBase')[1], '10', '4')]",
                                "translatedPort": "443",
                                "ipProtocols": [
                                    "TCP"
                                ],
                                "sourceAddresses": [
                                    "*"
                                ],
                                "sourceIpGroups": [],
                                "destinationAddresses": [
                                    "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAzureFirewallName'))).ipAddress]"
                                ],
                                "destinationPorts": [
                                    "[variables('azureFirewallPolicyRuleDestinationPort')]"
                                ]
                            }
                        ],
                        "name": "[variables('azureFirewallPolicyCollectionName')]",
                        "priority": 150
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/azureFirewalls",
            "apiVersion": "2020-11-01",
            "name": "[variables('azureFirewallName')]",
            "location": "[variables('networkLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAzureFirewallName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetFirewallName'))]",
                "[resourceId('Microsoft.Network/firewallPolicies', variables('azureFirewallPoliciesName'))]",
                "[resourceId('Microsoft.Network/firewallPolicies/ruleCollectionGroups', variables('azureFirewallPoliciesName'), 'DefaultNetworkRuleCollectionGroup')]"
            ],
            "properties": {
                "sku": {
                    "name": "AZFW_VNet",
                    "tier": "Premium"
                },
                "threatIntelMode": "Alert",
                "additionalProperties": {},
                "ipConfigurations": [
                    {
                        "name": "[concat('PIP-', variables('azureFirewallName'))]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAzureFirewallName'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetFirewallName'))]"
                            }
                        }
                    }
                ],
                "networkRuleCollections": [],
                "applicationRuleCollections": [],
                "natRuleCollections": [],
                "firewallPolicy": {
                    "id": "[resourceId('Microsoft.Network/firewallPolicies', variables('azureFirewallPoliciesName'))]"
                }
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces",
            "apiVersion": "2022-10-01-preview",
            "name": "[variables('eventHubNamespaceName')]",
            "location": "[variables('networkLocation')]",
            "sku": {
                "name": "Standard",
                "tier": "Standard",
                "capacity": 1
            },
            "properties": {
                "minimumTlsVersion": "1.2",
                "publicNetworkAccess": "Enabled",
                "disableLocalAuth": true,
                "zoneRedundant": true,
                "isAutoInflateEnabled": true,
                "maximumThroughputUnits": 2,
                "kafkaEnabled": true
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/authorizationrules",
            "apiVersion": "2022-10-01-preview",
            "name": "[concat(variables('eventHubNamespaceName'), '/RootManageSharedAccessKey')]",
            "location": "[variables('networkLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespaceName'))]"
            ],
            "properties": {
                "rights": [
                    "Listen",
                    "Manage",
                    "Send"
                ]
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs",
            "apiVersion": "2022-10-01-preview",
            "name": "[concat(variables('eventHubNamespaceName'), '/', variables('eventHubName'))]",
            "location": "[variables('networkLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespaceName'))]"
            ],
            "properties": {
                "retentionDescription": {
                    "cleanupPolicy": "Delete",
                    "retentionTimeInHours": 7
                },
                "messageRetentionInDays": 1,
                "partitionCount": 1,
                "status": "Active"
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/networkRuleSets",
            "apiVersion": "2022-10-01-preview",
            "name": "[concat(variables('eventHubNamespaceName'), '/default')]",
            "location": "[variables('networkLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespaceName'))]"
            ],
            "properties": {
                "publicNetworkAccess": "Enabled",
                "defaultAction": "Allow",
                "virtualNetworkRules": [],
                "ipRules": []
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
            "apiVersion": "2022-10-01-preview",
            "name": "[concat(variables('eventHubNamespaceName'), '/',variables('eventHubName'),'/$Default')]",
            "location": "[variables('networkLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('eventHubNamespaceName'), variables('eventHubName'))]",
                "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespaceName'))]"
            ],
            "properties": {}
        },
        {
            "type": "microsoft.operationalinsights/workspaces",
            "apiVersion": "2021-06-01",
            "name": "[variables('logAnalyticsWorkspaceName')]",
            "location": "[variables('networkLocation')]",
            "properties": {
                "sku": {
                    "name": "PerGB2018"
                },
                "retentionInDays": 30,
                "features": {
                    "enableLogAccessUsingOnlyResourcePermissions": true
                },
                "workspaceCapping": {
                    "dailyQuotaGb": -1
                },
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/dataexports",
            "apiVersion": "2020-08-01",
            "name": "[concat(variables('logAnalyticsWorkspaceName'), '/ExportToEvenHub')]",
            "location": "[variables('networkLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
            ],
            "properties": {
                "dataExportId": "1c22961b-e7bf-4d74-9625-b19212c9ff43",
                "destination": {
                    "resourceId": "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespaceName'))]",
                    "metaData": {
                        "eventHubName": "[variables('eventHubName')]"
                    }
                },
                "tableNames": [
                    "Syslog"
                ],
                "enable": true,
                "createdDate": "2023-05-04T12:50:22.3477524Z",
                "lastModifiedDate": "2023-05-04T12:50:22.3477524Z"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/tables",
            "apiVersion": "2021-12-01-preview",
            "name": "[concat(variables('logAnalyticsWorkspaceName'), '/Syslog')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
            ],
            "properties": {
                "totalRetentionInDays": 30,
                "plan": "Analytics",
                "schema": {
                    "name": "Syslog"
                },
                "retentionInDays": 30
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2020-06-01",
            "name": "[variables('webAppServiceName')]",
            "location": "[variables('networkLocation')]",
            "sku": {
                "name": "[variables('webAppSkuName')]",
                "tier": "[variables('skuTier')]",
                "size": "[variables('webAppSkuName')]",
                "family": "[variables('webAppSkuName')]",
                "capacity": 1
            },
            "kind": "app",
            "properties": {}
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2020-06-01",
            "name": "[variables('webAppInternalName')]",
            "location": "[variables('networkLocation')]",
            "kind": "app",
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('webAppServiceName'))]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('webAppServiceName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/azureFirewalls/providers/diagnosticSettings",
            "name": "[concat(variables('azureFirewallName'),'/microsoft.insights/', variables('diagSettingsName'))]",
            "apiVersion": "2021-05-01-preview",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]",
                "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespaceName'))]",
                "[resourceId('Microsoft.Network/azureFirewalls', variables('azureFirewallName'))]"
            ],
            "properties": {
                "name": "DiagService",
                "storageAccountId": null,
                "eventHubAuthorizationRuleId": "[resourceId('Microsoft.EventHub/namespaces/authorizationrules', variables('eventHubNamespaceName'), 'RootManageSharedAccessKey')]",
                "eventHubName": "[variables('eventHubName')]",
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]",
                "logs": [
                    {
                        "category": "AzureFirewallApplicationRule",
                        "enabled": true,
                        "retentionPolicy": {
                            "days": 10,
                            "enabled": false
                        }
                    },
                    {
                        "category": "AzureFirewallNetworkRule",
                        "enabled": true,
                        "retentionPolicy": {
                            "days": 10,
                            "enabled": false
                        }
                    }
                ],
                "metrics": [
                    {
                        "category": "AllMetrics",
                        "enabled": true,
                        "retentionPolicy": {
                            "enabled": false,
                            "days": 0
                        }
                    }
                ]
            }
        }
    ]
}