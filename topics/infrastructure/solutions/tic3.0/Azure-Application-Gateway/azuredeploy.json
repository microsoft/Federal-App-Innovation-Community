{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualNetworkIPRange": {
            "defaultValue": "192.168.0.0/16",
            "type": "String",
            "allowedValues": [
                "192.168.0.0/16",
                "10.0.0.0/16",
                "10.10.0.0/16",
                "10.100.0.0/16"
            ],
            "metadata": {
                "description": "This is the IP Range for the virtual network in which the Azure App Gateway and Web App will reside."
            }
        },
        "deploymentPurpose": {
            "type": "string",
            "defaultValue": "webAppExample",
            "metadata": {
                "description": "Short hand term used to create Azure resources."
            }
        }
    },
    "variables": {
        "webAppDnsName": ".azurewebsites",
        "networkLocation": "[resourceGroup().location]",
        "webAppDnsExtension": "[if(contains(variables('networkLocation'), 'usgov'), '.us', '.net')]",
        "skuTierAppGw": "WAF_v2",
        "webAppUniqueName": "[format('{0}-{1}', parameters('deploymentPurpose'), uniqueString(resourceGroup().id))]",
        "virtualNetworkName": "[concat('VNet-', variables('webAppUniqueName'))]",
        "IPBase": "[split(parameters('virtualNetworkIPRange'),'.')]",
        "subnetAppGatewayName": "AppGatewaySubnet",
        "subnetAppGatewayIPRange": "[format('{0}.{1}.{2}.{3}/{4}', variables('IPBase')[0], variables('IPBase')[1], '0', '0', '26')]",
        "subnetAppServiceEnvName": "AppServiceEnvSubnet",
        "subnetAppServiceEnvIPRange": "[format('{0}.{1}.{2}.{3}/{4}', variables('IPBase')[0], variables('IPBase')[1], '1', '0', '26')]",
        "appGatewayName": "[concat('AppGw-', variables('webAppUniqueName'))]",
        "appGatewayCapacity": 2,
        "appGatewayPortName": "port_80",
        "appGatewayPort": 80,
        "appGatewayProtocol": "Http",
        "appGatewayFrontEndName": "appGwPublicFrontendIp",
        "appGatewayBackEndPoolName": "internalWebApp",
        "appGatewayBackEndHttpSettingsName": "myHttpSetting",
        "appGatewayHttpListenerName": "myListener",
        "azureWafPoliciesName": "[concat('Waf-AppGw-', variables('webAppUniqueName'))]",
        "publicIPAppGatewayName": "[concat('Pip-AppGw-', variables('webAppUniqueName'))]",
        "logAnalyticsWorkspaceName": "[concat('Law-', variables('webAppUniqueName'))]",
        "eventHubNamespaceName": "[concat('EvHbNmSpc-', variables('webAppUniqueName'))]",
        "eventHubName": "[concat('EvHb-', variables('webAppUniqueName'))]",
        "appServiceEnvName": "[concat('ASEv3-', variables('webAppUniqueName'))]",
        "webAppServiceName": "[concat('AppService-', variables('webAppUniqueName'))]",
        "webAppInternalName": "[concat(variables('webAppUniqueName'),'-Internal')]",
        "webAppSkuFamily": "P",
        "webAppSkuLevel": "1",
        "webAppSkuTier": "Premium",
        "diagSettingsName": "[concat('SendtoWorkspace-', variables('webAppUniqueName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "name": "[variables('virtualNetworkName')]",
            "location": "[variables('networkLocation')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('virtualNetworkIPRange')]"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(variables('virtualNetworkName'), '/', variables('subnetAppGatewayName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "addressPrefix": "[variables('subnetAppGatewayIPRange')]",
                "serviceEndpoints": [
                    {
                        "service": "Microsoft.Web",
                        "locations": [
                            "*"
                        ]
                    }
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(variables('virtualNetworkName'), '/', variables('subnetAppServiceEnvName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetAppGatewayName'))]"
            ],
            "properties": {
                "addressPrefix": "[variables('subnetAppServiceEnvIPRange')]",
                "serviceEndpoints": [],
                "delegations": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "name": "[variables('publicIPAppGatewayName')]",
            "location": "[variables('networkLocation')]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2020-06-01",
            "name": "[variables('appGatewayName')]",
            "location": "[variables('networkLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAppGatewayName'))]",
                "[resourceId('Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies', variables('azureWafPoliciesName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetAppGatewayName'))]",
                "[resourceId('Microsoft.Web/sites', variables('webAppInternalName'))]"
            ],
            "properties": {
                "sku": {
                    "name": "[variables('skuTierAppGw')]",
                    "tier": "[variables('skuTierAppGw')]",
                    "capacity": "[variables('appGatewayCapacity')]"
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "appGatewayIpConfig",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetAppGatewayName'))]"
                            }
                        }
                    }
                ],
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('appGatewayFrontEndName')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAppGatewayName'))]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "[variables('appGatewayPortName')]",
                        "properties": {
                            "port": "[variables('appGatewayPort')]"
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('appGatewayBackEndPoolName')]",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "fqdn": "[concat(variables('webAppInternalName'), variables('webAppDnsName'), variables('webAppDnsExtension'))]"
                                }
                            ]
                        }
                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "name": "[variables('appGatewayBackEndHttpSettingsName')]",
                        "properties": {
                            "port": "[variables('appGatewayPort')]",
                            "protocol": "[variables('appGatewayProtocol')]",
                            "cookieBasedAffinity": "Disabled",
                            "pickHostNameFromBackendAddress": true,
                            "requestTimeout": 20
                        }
                    }
                ],
                "httpListeners": [
                    {
                        "name": "[variables('appGatewayHttpListenerName')]",
                        "properties": {
                            "firewallPolicy": {
                                "id": "[resourceId('Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies', variables('azureWafPoliciesName'))]"
                            },
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', variables('appGatewayName'), variables('appGatewayFrontEndName'))]"
                            },
                            "frontendPort": {
                                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', variables('appGatewayName'), variables('appGatewayPortName'))]"
                            },
                            "protocol": "[variables('appGatewayProtocol')]",
                            "requireServerNameIndication": false
                        }
                    }
                ],
                "requestRoutingRules": [
                    {
                        "name": "myRoutingRule",
                        "properties": {
                            "ruleType": "Basic",
                            "httpListener": {
                                "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', variables('appGatewayName'), variables('appGatewayHttpListenerName'))]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', variables('appGatewayName'), variables('appGatewayBackEndPoolName'))]"
                            },
                            "backendHttpSettings": {
                                "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', variables('appGatewayName'), variables('appGatewayBackEndHttpSettingsName'))]"
                            }
                        }
                    }
                ],
                "enableHttp2": false,
                "webApplicationFirewallConfiguration": {
                    "enabled": true,
                    "firewallMode": "Prevention",
                    "ruleSetType": "OWASP",
                    "ruleSetVersion": "3.2",
                    "requestBodyCheck": true,
                    "maxRequestBodySizeInKb": 128,
                    "fileUploadLimitInMb": 100
                },
                "firewallPolicy": {
                    "id": "[resourceId('Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies', variables('azureWafPoliciesName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies",
            "apiVersion": "2020-06-01",
            "name": "[variables('azureWafPoliciesName')]",
            "location": "[variables('networkLocation')]",
            "properties": {
                "customRules": [],
                "policySettings": {
                    "requestBodyCheck": true,
                    "maxRequestBodySizeInKb": 128,
                    "fileUploadLimitInMb": 100,
                    "state": "Enabled",
                    "mode": "Prevention"
                },
                "managedRules": {
                    "exclusions": [],
                    "managedRuleSets": [
                        {
                            "ruleSetType": "OWASP",
                            "ruleSetVersion": "3.2",
                            "ruleGroupOverrides": []
                        },
                        {
                            "ruleSetType": "Microsoft_BotManagerRuleSet",
                            "ruleSetVersion": "0.1",
                            "ruleGroupOverrides": []
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces",
            "apiVersion": "2022-10-01-preview",
            "name": "[variables('eventHubNamespaceName')]",
            "location": "[variables('networkLocation')]",
            "sku": {
                "name": "Standard",
                "tier": "Standard",
                "capacity": 1
            },
            "properties": {
                "minimumTlsVersion": "1.2",
                "publicNetworkAccess": "Enabled",
                "disableLocalAuth": true,
                "zoneRedundant": true,
                "isAutoInflateEnabled": true,
                "maximumThroughputUnits": 2,
                "kafkaEnabled": true
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/authorizationrules",
            "apiVersion": "2022-10-01-preview",
            "name": "[concat(variables('eventHubNamespaceName'), '/RootManageSharedAccessKey')]",
            "location": "[variables('networkLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespaceName'))]"
            ],
            "properties": {
                "rights": [
                    "Listen",
                    "Manage",
                    "Send"
                ]
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs",
            "apiVersion": "2022-10-01-preview",
            "name": "[concat(variables('eventHubNamespaceName'), '/', variables('eventHubName'))]",
            "location": "[variables('networkLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespaceName'))]"
            ],
            "properties": {
                "retentionDescription": {
                    "cleanupPolicy": "Delete",
                    "retentionTimeInHours": 7
                },
                "messageRetentionInDays": 1,
                "partitionCount": 1,
                "status": "Active"
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/networkRuleSets",
            "apiVersion": "2022-10-01-preview",
            "name": "[concat(variables('eventHubNamespaceName'), '/default')]",
            "location": "[variables('networkLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespaceName'))]"
            ],
            "properties": {
                "publicNetworkAccess": "Enabled",
                "defaultAction": "Allow",
                "virtualNetworkRules": [],
                "ipRules": []
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
            "apiVersion": "2022-10-01-preview",
            "name": "[concat(variables('eventHubNamespaceName'), '/',variables('eventHubName'),'/$Default')]",
            "location": "[variables('networkLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('eventHubNamespaceName'), variables('eventHubName'))]",
                "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespaceName'))]"
            ],
            "properties": {}
        },
        {
            "type": "microsoft.operationalinsights/workspaces",
            "apiVersion": "2021-06-01",
            "name": "[variables('logAnalyticsWorkspaceName')]",
            "location": "[variables('networkLocation')]",
            "properties": {
                "sku": {
                    "name": "PerGB2018"
                },
                "retentionInDays": 30,
                "features": {
                    "enableLogAccessUsingOnlyResourcePermissions": true
                },
                "workspaceCapping": {
                    "dailyQuotaGb": -1
                },
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/dataexports",
            "apiVersion": "2020-08-01",
            "name": "[concat(variables('logAnalyticsWorkspaceName'), '/ExportToEvenHub')]",
            "location": "[variables('networkLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
            ],
            "properties": {
                "dataExportId": "1c22961b-e7bf-4d74-9625-b19212c9ff43",
                "destination": {
                    "resourceId": "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespaceName'))]",
                    "metaData": {
                        "eventHubName": "[variables('eventHubName')]"
                    }
                },
                "tableNames": [
                    "Syslog"
                ],
                "enable": true
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/tables",
            "apiVersion": "2021-12-01-preview",
            "name": "[concat(variables('logAnalyticsWorkspaceName'), '/Syslog')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
            ],
            "properties": {
                "totalRetentionInDays": 30,
                "plan": "Analytics",
                "schema": {
                    "name": "Syslog"
                },
                "retentionInDays": 30
            }
        },
        {
            "apiVersion": "2019-08-01",
            "type": "Microsoft.Web/hostingEnvironments",
            "name": "[variables('appServiceEnvName')]",
            "location": "[variables('networkLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetAppGatewayName'))]"
            ],
            "properties": {
                "name": "[variables('appServiceEnvName')]",
                "location": "[variables('networkLocation')]",
                "ipSslAddressCount": 1,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetAppServiceEnvName'))]"
                },
                "multiSize": "Medium",
                "multiRoleCount": "2",
                "workerPools": [
                    {
                        "workerSizeId": 0,
                        "workerSize": "Small",
                        "workerCount": 2
                    },
                    {
                        "workerSizeId": 1,
                        "workerSize": "Small",
                        "workerCount": 0
                    },
                    {
                        "workerSizeId": 2,
                        "workerSize": "Small",
                        "workerCount": 0
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2020-06-01",
            "name": "[variables('webAppServiceName')]",
            "location": "[variables('networkLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/hostingEnvironments', variables('appServiceEnvName'))]"
            ],
            "sku": {
                "name": "[concat(variables('webAppSkuFamily'), variables('webAppSkuLevel'))]",
                "tier": "[variables('webAppSkuTier')]",
                "size": "[concat(variables('webAppSkuFamily'), variables('webAppSkuLevel'))]",
                "family": "[variables('webAppSkuFamily')]",
                "capacity": 1
            },
            "properties": {
                "name": "[variables('webAppServiceName')]",
                "hostingEnvironment": "[variables('appServiceEnvName')]",
                "hostingEnvironmentId": "[resourceId('Microsoft.Web/hostingEnvironments', variables('appServiceEnvName'))]"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2020-06-01",
            "name": "[variables('webAppInternalName')]",
            "location": "[variables('networkLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('webAppServiceName'))]"
            ],
            "kind": "app",
            "properties": {
                "name": "[variables('webAppInternalName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('webAppServiceName'))]",
                "hostingEnvironment": "[variables('appServiceEnvName')]",
                "hostingEnvironmentId": "[resourceId('Microsoft.Web/hostingEnvironments', variables('appServiceEnvName'))]"
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2021-02-01",
            "name": "[concat(variables('webAppInternalName'), '/web')]",
            "location": "[variables('networkLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('webAppInternalName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetAppGatewayName'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAppGatewayName'))).ipAddress[0]]",
                        "name": "Only allow connections to app from App Gateway.",
                        "action": "Allow",
                        "tag": "Default",
                        "priority": 300
                    },
                    {
                        "ipAddress": "Any",
                        "action": "Deny",
                        "priority": 2147483647,
                        "name": "Deny all",
                        "description": "Deny all access"
                    }
                ],
                "scmIpSecurityRestrictions": [],
                "scmIpSecurityRestrictionsUseMain": true
            }
        },
        {
            "type": "Microsoft.Network/applicationGateways/providers/diagnosticSettings",
            "name": "[concat(variables('appGatewayName'),'/microsoft.insights/', variables('diagSettingsName'))]",
            "apiVersion": "2021-05-01-preview",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]",
                "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespaceName'))]",
                "[resourceId('Microsoft.Network/applicationGateways', variables('appGatewayName'))]"
            ],
            "properties": {
                "name": "DiagService",
                "storageAccountId": null,
                "eventHubAuthorizationRuleId": "[resourceId('Microsoft.EventHub/namespaces/authorizationrules', variables('eventHubNamespaceName'), 'RootManageSharedAccessKey')]",
                "eventHubName": "[variables('eventHubName')]",
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]",
                "logs": [
                    {
                        "category": "ApplicationGatewayAccessLog",
                        "enabled": true,
                        "retentionPolicy": {
                            "days": 10,
                            "enabled": false
                        }
                    },
                    {
                        "category": "ApplicationGatewayPerformanceLog",
                        "enabled": true,
                        "retentionPolicy": {
                            "days": 10,
                            "enabled": false
                        }
                    },
                    {
                        "category": "ApplicationGatewayFirewallLog",
                        "enabled": true,
                        "retentionPolicy": {
                            "days": 10,
                            "enabled": false
                        }
                    }
                ],
                "metrics": [
                    {
                        "category": "AllMetrics",
                        "enabled": true,
                        "retentionPolicy": {
                            "enabled": false,
                            "days": 0
                        }
                    }
                ]
            }
        }
    ]
}